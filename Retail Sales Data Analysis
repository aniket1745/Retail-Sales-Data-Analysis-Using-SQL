Dataset Creation:

1. Customers Table:

CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    join_date DATE
);

INSERT INTO customers (customer_id, first_name, last_name, email, join_date) VALUES
(1, 'John', 'Doe', 'john.doe@example.com', '2023-01-15'),
(2, 'Jane', 'Smith', 'jane.smith@example.com', '2023-02-20'),
(3, 'Michael', 'Brown', 'michael.brown@example.com', '2023-03-10');


2. Products Table:

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(100),
    category VARCHAR(50),
    price DECIMAL(10, 2),
    stock_quantity INT
);

INSERT INTO products (product_id, product_name, category, price, stock_quantity) VALUES
(1, 'Laptop', 'Electronics', 1000.00, 50),
(2, 'Smartphone', 'Electronics', 600.00, 80),
(3, 'Desk Chair', 'Furniture', 150.00, 20);

3. Sales Table:

CREATE TABLE sales (
    sale_id INT PRIMARY KEY,
    customer_id INT,
    product_id INT,
    sale_date DATE,
    quantity INT,
    total_amount DECIMAL(10, 2),
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);

INSERT INTO sales (sale_id, customer_id, product_id, sale_date, quantity, total_amount) VALUES
(1, 1, 1, '2023-04-01', 1, 1000.00),
(2, 2, 2, '2023-04-03', 2, 1200.00),
(3, 1, 3, '2023-04-10', 1, 150.00);
SQL Queries for Data Analysis


1. Total Sales per Product:

SELECT p.product_name, SUM(s.total_amount) AS total_sales
FROM sales s
JOIN products p ON s.product_id = p.product_id
GROUP BY p.product_name
ORDER BY total_sales DESC;

2. Customer Purchase History:

SELECT c.first_name, c.last_name, p.product_name, s.sale_date, s.quantity, s.total_amount
FROM sales s
JOIN customers c ON s.customer_id = c.customer_id
JOIN products p ON s.product_id = p.product_id
ORDER BY c.last_name, c.first_name;

3. Average Sales per Day:

SELECT sale_date, AVG(total_amount) AS avg_sales
FROM sales
GROUP BY sale_date
ORDER BY sale_date;

4. Stock Level by Category:

SELECT category, SUM(stock_quantity) AS total_stock
FROM products
GROUP BY category;

5. Top Customers by Spending:

SELECT c.first_name, c.last_name, SUM(s.total_amount) AS total_spent
FROM sales s
JOIN customers c ON s.customer_id = c.customer_id
GROUP BY c.first_name, c.last_name
ORDER BY total_spent DESC;
